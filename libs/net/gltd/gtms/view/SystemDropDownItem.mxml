<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx" width="100%"
				height="27" autoDrawBackground="false">
	
	
	
	
	<s:states>
		<s:State name="normal" />
		<s:State name="hovered" />
		<s:State name="selected" />
	</s:states>
	<fx:Script>
		<![CDATA[
			public override function set data(val:Object):void {
				super.data = val;
				try {
					this.enabled = data.enabled
				}catch (error:Error){
					this.enabled = true;
				}
			}
		]]>
	</fx:Script>
	

	
	<s:Rect	left="0" right="0" top="0" bottom="0"  height="27" width="100%" 
			alpha.normal="{styleManager.getMergedStyleDeclaration('.dropDownItemrenderer').getStyle('backgroundAlpha')}"
			alpha.selected="{styleManager.getMergedStyleDeclaration('.dropDownItemrendererSelected').getStyle('backgroundAlpha')}"
			alpha.hovered="{styleManager.getMergedStyleDeclaration('.dropDownItemrendererHover').getStyle('backgroundAlpha')}"
			> 
		<s:fill> 
			<s:SolidColor
				color.normal="{ styleManager.getMergedStyleDeclaration('.dropDownItemrenderer').getStyle('backgroundColor') }"
				color.selected="{styleManager.getMergedStyleDeclaration('.dropDownItemrendererSelected').getStyle('backgroundColor')}"
				color.hovered="{styleManager.getMergedStyleDeclaration('.dropDownItemrendererHover').getStyle('backgroundColor')}"
				/> 
		</s:fill> 
	</s:Rect>     
	<s:Label text="{data.label}" verticalCenter="0" left="10"
			 styleName="listItemrendererText"
			 styleName.hovered="listItemrendererTextHover"
			 styleName.selected="listItemrendererTextSelected" 
			 />
	
</s:ItemRenderer>
